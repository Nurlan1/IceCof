@model IEnumerable<Project.Models.worker>
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Сотрудники";
}

<h2>Сотрудники</h2>

<p>
    @Html.ActionLink("Добавить сотрудника", "Create")
</p>

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.salary)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.login)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.password)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.post1.post1)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.address)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.salary)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.login)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.password)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.post1.post1)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
            @Html.ActionLink("Details", "Details", new { id=item.id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.id })
        </td>
    </tr>
}

</table>*@

<div id="grid">
    </div>


    <script>

        $(document).ready(function () {
            var data = @Html.Raw(JsonConvert.SerializeObject(Model.Select(x=> new
                  {
                      x.id,
                      x.name,
                     // x.post1.post1,
                      x.address,
                      x.phone,
                      x.salary,
                  }
                 )));
            var source =
                {
                    localdata: data,
                    datatype: "local",
                    datafields: [
                         { name: 'id', type: 'int' },
                        { name: 'name', type: 'string' },
                       // { name: 'x.post1.post1', type: 'int' },
                        { name: 'address', type: 'string' },
                        { name: 'phone', type: 'string' },
                        { name: 'salary', type: 'float' }
                       // { name: 'xU', type: 'string' }

                    ],
                    //url: "/PersonCitizenship/h"
                    root: "worker",
                    record: "workers",
                    id: 'id'
                };
            var cellsrenderer = function (row, columnfield, value, defaulthtml, columnproperties, rowdata) {
                if (value < 20) {
                    return '<span style="margin: 4px; margin-top:8px; float: ' + columnproperties.cellsalign + '; color: #ff0000;">' + value + '</span>';
                }
                else {
                    return '<span style="margin: 4px; margin-top:8px; float: ' + columnproperties.cellsalign + '; color: #008000;">' + value + '</span>';
                }
            }
            var dataAdapter = new $.jqx.dataAdapter(source, {
                downloadComplete: function (data, status, xhr) { },
                loadComplete: function (data) { },
                loadError: function (xhr, status, error) { }
            });

            $("#grid").jqxGrid(
                {
                    width: getWidth('Grid'),
                    source: dataAdapter,
                    pageable: true,
                    autoheight: true,
                    sortable: true,
                    altrows: true,
                    showfilterrow: true,
                    filterable: true,
                    enabletooltips: true,
                    editable: true,
                    selectionmode: 'multiplecellsadvanced',
                    columns: [
                      //{ text: 'Id', columngroup: 'Countries', datafield: 'Id', width: 250 },
                      { text: 'Имя', columngroup: 'Countries',datafield: 'name', cellsalign: 'right', align: 'right', width: 250 },
                      //{ text: 'Должность', columngroup: 'Countries',datafield: 'x.post1.post1', align: 'right', cellsalign: 'right', width: 200 },
                      { text: 'Адрес', columngroup: 'Countries',datafield: 'address', cellsalign: 'right', align: 'right', width: 200 },
                      { text: 'Телефон', columngroup: 'Countries',datafield: 'phone', cellsalign: 'right', align: 'right', width: 200 },
                      { text: 'Оклад', columngroup: 'Countries',datafield: 'salary', cellsalign: 'right', align: 'right', width: 200 }
                    ],
                    columngroups: [
                        { text: 'Сотрудники', align: 'center', name: 'Countries' }
                    ]
                });
            $("#grid").on("rowdoubleclick", function (event)
            {
                //location.replace("/PersonCitizenships/Index.html")

                //window.location.href
                var idn = event.args.row.bounddata.id;
                var url = "/Worker/Edit/" + idn;
               window.location.replace(url);


                });
            });

    </script>

